Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
+++ b/.gitignore	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
@@ -0,0 +1,29 @@
+### IntelliJ IDEA ###
+out/
+!**/src/main/**/out/
+!**/src/test/**/out/
+
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+bin/
+!**/src/main/**/bin/
+!**/src/test/**/bin/
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+
+### VS Code ###
+.vscode/
+
+### Mac OS ###
+.DS_Store
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
+++ b/.idea/.gitignore	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
+++ b/.idea/misc.xml	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="21 (3)" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
+++ b/.idea/modules.xml	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/java_dsa.iml" filepath="$PROJECT_DIR$/java_dsa.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
+++ b/.idea/vcs.xml	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: java_dsa.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/java_dsa.iml b/java_dsa.iml
new file mode 100644
--- /dev/null	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
+++ b/java_dsa.iml	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: src/functions/overLoading.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/functions/overLoading.java b/src/functions/overLoading.java
new file mode 100644
--- /dev/null	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
+++ b/src/functions/overLoading.java	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
@@ -0,0 +1,17 @@
+package functions;
+
+public class overLoading {
+    public static void main(String[] args) {
+        // overloading means : same function name and different no of parameters and their type
+        System.out.println(sum(2, 3));
+        System.out.println(sum(2 , 3, 4));
+    }
+
+    static int sum(int a , int b) {
+        return  a + b;
+    }
+
+    static int sum(int a , int b , int c) {
+        return a+b+c;
+    }
+}
Index: src/functions/shadow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/functions/shadow.java b/src/functions/shadow.java
new file mode 100644
--- /dev/null	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
+++ b/src/functions/shadow.java	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
@@ -0,0 +1,17 @@
+package functions;
+
+public class shadow {
+    static int x = 20; // this can be accessed in the entire class
+    public static void main(String[] args) {
+        System.out.println(x);
+
+        int x = 30; // now creating a new variable and initialzing it .
+        // now this "new" value if "x" will "shadow" the upper value of x.
+        System.out.println(x);
+        display();
+    }
+
+    static void display(){
+        System.out.println(x); // will access the global value of x
+    }
+}
Index: src/functions/varAgs.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/functions/varAgs.java b/src/functions/varAgs.java
new file mode 100644
--- /dev/null	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
+++ b/src/functions/varAgs.java	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
@@ -0,0 +1,17 @@
+package functions;
+
+import java.util.Arrays;
+
+public class varAgs {
+    public static void main(String[] args) {
+        display(1, 2, 3, 4, 5);
+        displayStrings("bhargav","harii", "suhas");
+    }
+
+    static void display(int ...numbers){
+        System.out.println(Arrays.toString(numbers));
+    }
+    static void displayStrings(String ...value){
+        System.out.println(Arrays.toString(value));
+    }
+}
Index: src/linkedList/LL.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/linkedList/LL.java b/src/linkedList/LL.java
new file mode 100644
--- /dev/null	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
+++ b/src/linkedList/LL.java	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
@@ -0,0 +1,22 @@
+package linkedList;
+
+public class LL {
+
+    class Node{
+        String data;
+        Node next;
+
+        Node(String data) {
+            this.data = data;
+            this.next =  null;
+        }
+    }
+
+    public void addFirst(String data) {
+
+    }
+
+    public static void main(String args[]) {
+
+    }
+}
Index: src/loops/forLoop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/loops/forLoop.java b/src/loops/forLoop.java
new file mode 100644
--- /dev/null	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
+++ b/src/loops/forLoop.java	(revision c45099cedfe88af34c9cefca7500a5512d5e1a5c)
@@ -0,0 +1,7 @@
+package loops;
+
+public class forLoop {
+    public static void main(String args[]) {
+        System.out.println("helllo world");
+    }
+}
